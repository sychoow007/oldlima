@inherits Umbraco.Web.Mvc.UmbracoViewPage<AccountModel>
@using System.Web.Mvc.Html
@using Merchello.Bazaar.Controllers
@using Merchello.Bazaar.Models.ViewModels
@using Merchello.Core
@using Merchello.Core.Models
@{
    Layout = "../Master.cshtml";

    System.Web.Mvc.HtmlHelper.ClientValidationEnabled = true;
    System.Web.Mvc.HtmlHelper.UnobtrusiveJavaScriptEnabled = true;

    var customer = (ICustomer)Model.CurrentCustomer;
}

<div class="row">
    <div class="col-md-6">
        <h1>@Model.Name</h1>
    </div>
</div>

<div class="row-fluid account">
    <div class="col-md-3">
        <h2>My Profile</h2>
        <div id="profile-view" class="vcard">
            <h3 class="fn">@customer.FullName</h3>
            <a href="mailto:@customer.Email" class="email">@customer.Email</a>
            <button id="btn-profile-open" class="btn btn-default">Edit</button>
        </div>
    </div>
    <div class="col-md-9">
        <div id="message" class="well span12">
            Success
        </div>
        <div id="address-view">
            <h2>Saved Addresses</h2>
            @BuildAddressTable(AddressType.Billing, customer.Addresses.Where(x => x.AddressType == AddressType.Billing))
            @BuildAddressTable(AddressType.Shipping, customer.Addresses.Where(x => x.AddressType == AddressType.Shipping))
        </div>
        <div id="address-form">
            @Html.Action("RenderCustomerAddressForm", "BazaarAccount", new { area = "Bazaar", model = Model.CustomerAddressModel })
        </div>
        <div id="profile-form">
            @Html.Action("RenderAccountProfileForm", "BazaarAccount", new { area = "Bazaar", model = Model.AccountProfileModel })
        </div>
    </div>
</div>


@helper BuildAddressTable(AddressType addressType, IEnumerable<ICustomerAddress> addressesCollection)
{
    var addresses = addressesCollection.ToArray();
    var addressLabel = addressType == AddressType.Shipping ? "Shipping Addresses" : "Billing Addresses";
    <table class="table table-bordered customer-addresses">
        <caption>@addressLabel</caption>
        @if (!addresses.Any())
        {
            <tr>
                <td>You do not have any saved addresses.</td>
            </tr>
        }
        else
        {
            <tr>
                <th>Label</th>
                <th>Name</th>
                <th>Address</th>
                <th>Address 2</th>
                <th>Locality</th>
                <th>Region</th>
                <th>Postal</th>
                <th>Country</th>
                <th></th>
            </tr>
            foreach (var adr in addresses)
            {
                <tr @(adr.IsDefault ? "class=default-address" : "")>
                    <td>@adr.Label</td>
                    <td>@adr.FullName</td>
                    <td>@adr.Address1</td>
                    <td>@adr.Address2</td>
                    <td>@adr.Locality</td>
                    <td>@adr.Region</td>
                    <td>@adr.PostalCode</td>
                    <td>@adr.CountryCode</td>
                    <td class="dropdown">
                        <button class="dropdown-toggle btn btn-default" data-toggle="dropdown">Actions</button>
                        <ul class="dropdown-menu">
                            <li><a href="#" class="address-edit-link" data-adddresstype="@adr.AddressType.ToString().ToLowerInvariant()" data-addresskey="@adr.Key">Edit</a></li>
                            @if (!adr.IsDefault)
                            {
                                <li>@Html.ActionLink("Make Default", "SetDefaultAddress", "BazaarAccount", new { area = "Bazaar", customerKey = adr.CustomerKey, customerAddressKey = adr.Key, accountPageId = Model.Id }, new { @class = "address-setdefault" })</li>
                            }
                            <li>
                                @Html.ActionLink("Delete", "DeleteCustomerAddress", "BazaarAccount", new { area = "Bazaar", customerKey = adr.CustomerKey, customerAddressKey = adr.Key, accountPageId = Model.Id }, new { @class = "address-delete" })
                            </li>
                        </ul>
                    </td>

                </tr>
            }
        }
    </table>
    <button id="btn-add-address-@addressType.ToString().ToLowerInvariant()" class="btn btn-create pull-right">Add New @addressLabel</button>
}